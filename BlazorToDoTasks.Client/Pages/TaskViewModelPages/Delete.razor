@page "/taskviewmodels/delete"
@inject IToDoTasksService service
@using BlazorToDoTasks.Client.ViewModels
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>TaskViewModel</h4>
    <hr />
    @if (taskviewmodel is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Title</dt>
            <dd class="col-sm-10">@taskviewmodel.Title</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@taskviewmodel.Description</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">StartDate</dt>
            <dd class="col-sm-10">@taskviewmodel.StartDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">EndDate</dt>
            <dd class="col-sm-10">@taskviewmodel.EndDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Done</dt>
            <dd class="col-sm-10">@taskviewmodel.Done</dd>
        </dl>
        <EditForm method="post" Model="taskviewmodel" OnValidSubmit="DeleteTaskViewModel" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(taskviewmodel is null)">Delete</button> |
            <a href="/taskviewmodels">Back to List</a>
        </EditForm>
    }
</div>

@code {
    TaskViewModel? taskviewmodel;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    private string ServerError { get; set; }
    protected override async Task OnInitializedAsync()
    {
        taskviewmodel = await service.GetTaskById(Id);


        if (taskviewmodel is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteTaskViewModel()
    {
        var response = await service.DeleteTask(Id);
        if (!response)
        {
            ServerError = "Erro ao tentar excluir task";
        }
        else
        {
            NavigationManager.NavigateTo("/taskviewmodels");
        }

    }
}
